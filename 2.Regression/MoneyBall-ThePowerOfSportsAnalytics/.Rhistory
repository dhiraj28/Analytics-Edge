setwd("E:/MS/AnalyticsEdge/Unit1")
USDA = read.csv("USDA.csv")
getwd()
USDA = read.csv("USDA.csv")
str(USDA)
summary(USDA)
USDA$Sodium
which.max(USDA$Sodium)
names(USDA)
USDA$Description[265]
HighSodium = subset(USDA, Sodium>10000)
nrow(HighSodium)
HighSodium$Description
match("CAVIAR", USDA$Description)
USDA$Sodium[4154]
USDA$Sodium[match("CAVIAR", USDA$Description)]
summary(USDA$Sodium)
sd(USDA$Sodium, na.rm = TRUE)
plot(USDA$Protein, USDA$TotalFat)
plot(USDA$Protein, USDA$TotalFat, xlab="Protein", ylab = "Fat", main = "Protein vs Fat", col = "red")
hist(USDA$VitaminC, xlab = "Vitamin C (mg)", main = "Histogram of Vitamin C")
hist(USDA$VitaminC, xlab = "Vitamin C (mg)", main = "Histogram of Vitamin C", xlim = c(0,100))
hist(USDA$VitaminC, xlab = "Vitamin C (mg)", main = "Histogram of Vitamin C", xlim = c(0,100), breaks=100)
hist(USDA$VitaminC, xlab = "Vitamin C (mg)", main = "Histogram of Vitamin C", xlim = c(0,100), breaks=2000)
boxplot(USDA$Sugar, ylab = "Sugar (g)", main = "Boxplot of Sugar")
HighSodium = as.numeric(USDA$Sodium > mean(USDA$Sodium, na.rm=TRUE))
str(HighSodium)
USDA$HighCarbs = as.numeric(USDA$Carbohydrate > mean(USDA$Carbohydrate, na.rm=TRUE))
USDA$HighProtein = as.numeric(USDA$Protein > mean(USDA$Protein, na.rm=TRUE))
USDA$HighFat = as.numeric(USDA$TotalFat > mean(USDA$TotalFat, na.rm=TRUE))
table(USDA$HighSodium)
table(USDA$HighSodium)
table(USDA$HighSodium)
str(USDA)
USDA$HighSodium = as.numeric(USDA$Sodium > mean(USDA$Sodium, na.rm=TRUE))
table(USDA$HighSodium)
table(USDA$HighSodium, USDA$HighFat)
tapply(USDA$Iron, USDA$HighProtein, mean, na.rm=TRUE)
tapply(USDA$VitaminC, USDA$HighCarbs, max, na.rm=TRUE)
tapply(USDA$VitaminC, USDA$HighCarbs, summary, na.rm=TRUE)
setwd("E:/MS/AnalyticsEdge/Unit1/Assignments/AnalyticalDetective")
mvt = read.csv("mvtChicago.csv")
str(mvt)
max(mvt$ID)
min(mvt$Beat)
table(mvt$Arrest)
table(mvt$LocationDescription)
mvt$Date[1]
str(mvt)
DateConvert = as.Date(strptime(mvt$Date, "%m/%d/%y %H:%M"))
summary(DateConvert)
mvt$Month = months(DateConvert)
mvt$Weekday = weekdays(DateConvert)
mvt$Date = DateConvert
mvt$Weekday = weekdays(DateConvert)
table(mvt$Month)
table(mvt$Weekday)
table(mvt$Arrest,mvt$Month)
sort(table(mvt$LocationDescription))
Top5 = subset(mvt, LocationDescription=="STREET" |
LocationDescription=="PARKING LOT/GARAGE(NON.RESID.)" |
LocationDescription=="ALLEY" | LocationDescription=="GAS STATION" |
LocationDescription=="DRIVEWAY - RESIDENTIAL")
str(Top5) #or
TopLocations = c("STREET", "PARKING LOT/GARAGE(NON.RESID.)", "ALLEY", "GAS STATION", "DRIVEWAY - RESIDENTIAL")
Top5 = subset(mvt, LocationDescription %in% TopLocations)
table(Top5$LocationDescription)
Top5$LocationDescription = factor(Top5$LocationDescription)
table(Top5$LocationDescription, Top5$Arrest)
table(Top5$LocationDescription)
prop.table(table(Top5$LocationDescription, Top5$Arrest),1)
table(Top5$LocationDescription, Top5$Weekday)
setwd("E:/MS/AnalyticsEdge/Unit1/Assignments/StockDynamics")
IBM = read.csv("IBMStock.csv")
IBM = read.csv("IBMStock.csv")
GE = read.csv("GEStock.csv")
ProcterGamble = read.csv("ProcterGambleStock.csv")
CocaCola = read.csv("CocaColaStock.csv")
IBM$Date = as.Date(IBM$Date, "%m/%d/%y")
GE$Date = as.Date(GE$Date, "%m/%d/%y")
CocaCola$Date = as.Date(CocaCola$Date, "%m/%d/%y")
ProcterGamble$Date = as.Date(ProcterGamble$Date, "%m/%d/%y")
Boeing$Date = as.Date(Boeing$Date, "%m/%d/%y")
Boeing = read.csv("BoeingStock.csv")
Boeing$Date = as.Date(Boeing$Date, "%m/%d/%y")
plot(CocaCola$Date, CocaCola$StockPrice, type="l")
lines(ProcterGamble$Date, ProcterGamble$StockPrice)
plot(CocaCola$Date, CocaCola$StockPrice, type="l",col="red")
lines(ProcterGamble$Date, ProcterGamble$StockPrice,col="blue")
lines(ProcterGamble$Date, ProcterGamble$StockPrice,col="blue",lty=2)
abline(v=as.Date(c("2000-03-01")), lwd=2)
plot(CocaCola$Date[301:432], CocaCola$StockPrice[301:432], type="l", col="red", ylim=c(0,210))
lines(ProcterGamble$Date, ProcterGamble$StockPrice,col="blue")
lines(ProcterGamble$Date[301:432], ProcterGamble$StockPrice[301:432],col="blue")
lines(ProcterGamble$Date[301:432], ProcterGamble$StockPrice[301:432],col="blue")
lines(IBM$Date[301:432], IBM$StockPrice[301:432], col="green")
lines(GE$Date[301:432], GE$StockPrice[301:432], col="purple")
lines(Boeing$Date[301:432], Boeing$StockPrice[301:432], col="orange")
abline(v=as.Date(c("2000-03-01")), lwd=2)
abline(v=as.Date(c("2000-03-01")), lwd=2)
abline(v=as.Date(c("2000-03-01")), lwd=2)
abline(v=as.Date(c("1997-09-01")), lwd=2)
abline(v=as.Date(c("1997-11-01")), lwd=2)
tapply(IBM$StockPrice, months(IBM$Date), mean)
setwd("E:/MS/AnalyticsEdge/Unit1/Assignments/Demographics and Employment in US")
CPS = read.csv("CPSData.csv")
summary(CPS)
sort(table(CPS$State))
table.prop(table(CPS$Citizenship))
table.prop(table(CPS$Citizenship),1)
prop.table(table(CPS$Citizenship),1)
prop.table(table(CPS$Citizenship))
table(CPS$Race, CPS$Hispanic)
is.na(CPS$Married)
table(CPS$Region, is.na(CPS$Married))
table(CPS$Region, is.na(CPS$Married))
table(CPS$Sex, is.na(CPS$Married))
table(CPS$Age, is.na(CPS$Married))
table(CPS$Citizenship, is.na(CPS$Married))
table(CPS$State, is.na(CPS$MetroAreaCode))
prop.table(table(CPS$State, is.na(CPS$MetroAreaCode)))
prop.table(table(CPS$Region, is.na(CPS$MetroAreaCode)))
View(CPS)
table(CPS$State, is.na(CPS$MetroAreaCode))
tapply(is.na(CPS$MetroAreaCode), CPS$State, mean)
MetroAreaMap=read.csv("MetroAreaCodes.csv")
CountryMap=read.csv("CountryCodes.csv")
CPS = merge(CPS, MetroAreaMap, by.x="MetroAreaCode", by.y="Code", all.x=TRUE)
tapply(CPS$Hispanic, CPS$MetroArea, mean)
sort(tapply(CPS$Hispanic, CPS$MetroArea, mean))
sort(tapply(CPS$Race == "Asian", CPS$MetroArea, mean))
sort(tapply(CPS$Education == "No high school diploma", CPS$MetroArea, mean, na.rm=TRUE))
CPS = merge(CPS, CountryMap, by.x="CountryOfBirthCode", by.y="Code", all.x=TRUE)
sort(tapply(CPS$Country == "India", CPS$MetroArea, sum, na.rm=TRUE))
poll = read.csv("AnonymityPoll.csv")
setwd("E:/MS/AnalyticsEdge/Unit1/Assignments/InternetPrivacyPoll")
poll = read.csv("AnonymityPoll.csv")
table(poll$Smartphone)
table(poll$Sex, poll$Region)
table(poll$Internet.Use, poll$Smartphone)
summary(poll)
limited = subset(poll, Internet.Use == 1 | Smartphone == 1)
nrow(limited)
prop.table((table(limited$Worry.About.Info)))
prop.table(table(limited$Anonymity.Possible))
hist(limited$Age)
plot(limited$Age, limited$Info.On.Internet)
table(limited$Age, limited$Info.On.Internet)
max(table(limited$Age, limited$Info.On.Internet))
jitter(c(1, 2, 3))
jitter(c(1, 2, 3))
plot(jitter(limited$Age), jitter(limited$Info.On.Internet))
tapply(limited$Info.On.Internet, limited$Smartphone, summary)
tapply(limited$Tried.Masking.Identity, limited$Smartphone, table)
tapply(limited$Tried.Masking.Identity, limited$Smartphone, prop.table)
tapply(limited$Tried.Masking.Identity, limited$Smartphone, prop.table(table))
tapply(limited$Tried.Masking.Identity, limited$Smartphone, table)
setwd("E:/MS/AnalyticsEdge/2.Regression")
wine = read.csv("wine.csv")
str(wine)
summary(wine)
model1 = lm(Price ~ AGST, data=wine)
summary(model1)
model1$residuals
SSE = sum(model1$residuals^2)
SSE
model2 = lm(Price ~ AGST + HarvestRain, data=wine)
summary(model2)
SSE = sum(model2$residuals^2)
SSE
model3 = lm(Price ~ AGST + HarvestRain + WinterRain + Age + FrancePop, data=wine)
summary(model3)
SSE = sum(model3$residuals^2)
SSE
model4 = lm(Price ~ AGST + HarvestRain + WinterRain + Age, data=wine)
summary(model4)
cor(wine$WinterRain, wine$Price)
cor(wine$Age, wine$FrancePop)
cor(wine)
model5 = lm(Price ~ AGST + HarvestRain + WinterRain, data=wine)
summary(model5)
wineTest = read.csv("wine_test.csv")
str(wineTest)
predictTest = predict(model4, newdata=wineTest)
predictTest
View(wineTest)
SSE = sum((wineTest$Price - predictTest)^2)
SST = sum((wineTest$Price - mean(wine$Price))^2)
1 - SSE/SST
setwd("E:/MS/AnalyticsEdge/2.Regression/MoneyBall-ThePowerOfSportsAnalytics")
baseball = read.csv("baseball.csv")
str(baseball)
moneyball = subset(baseball, Year < 2002)
str(moneyball)
baseball = read.csv("baseball.csv")
str(baseball)
moneyball = subset(baseball, Year < 2002)
str(moneyball)
moneyball$RD = moneyball$RS - moneyball$RA
str(moneyball)
plot(moneyball$RD, moneyball$W)
WinsReg = lm(W ~ RD, data=moneyball)
summary(WinsReg)
